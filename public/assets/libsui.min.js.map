{
  "version": 3,
  "sources": ["libsui.ts"],
  "sourcesContent": ["function $$(selector) {\n  let elm: HTMLElement | null = null;\n  if (typeof selector === \"string\") {\n    elm = document.querySelector(selector);\n  }\n\n  if (selector instanceof HTMLElement) {\n    elm = selector;\n  }\n\n  if (elm) {\n    const cn = elm.getAttribute(\"s:cn\");\n    if (cn && cn != \"\" && typeof window[cn] === \"function\") {\n      const component = new window[cn](elm);\n      return new __sui_component(elm, component);\n    }\n  }\n  return null;\n}\n\nfunction __sui_component_root(elm: Element, name: string) {\n  return elm.closest(`[s\\\\:cn=${name}]`);\n}\n\nfunction __sui_state(component) {\n  this.handlers = component.watch || {};\n  this.Set = async function (key, value, target) {\n    const handler = this.handlers[key];\n    target = target || component.root;\n    if (handler && typeof handler === \"function\") {\n      const stateObj = {\n        target: target,\n        stopPropagation: function () {\n          target.setAttribute(\"state-propagation\", \"true\");\n        },\n      };\n      await handler(value, stateObj);\n      const isStopPropagation = target\n        ? target.getAttribute(\"state-propagation\") === \"true\"\n        : false;\n      if (isStopPropagation) {\n        return;\n      }\n\n      let parent = component.root.parentElement?.closest(`[s\\\\:cn]`);\n      if (parent == null) {\n        return;\n      }\n\n      // Dispatch the state change custom event to parent component\n      const event = new CustomEvent(\"state:change\", {\n        detail: { key: key, value: value, target: component.root },\n      });\n      parent.dispatchEvent(event);\n    }\n  };\n}\n\nfunction __sui_props(elm) {\n  this.Get = function (key) {\n    if (!elm || typeof elm.getAttribute !== \"function\") {\n      return null;\n    }\n    const k = \"prop:\" + key;\n    const v = elm.getAttribute(k);\n    const json = elm.getAttribute(\"json-attr-prop:\" + key) === \"true\";\n    if (json) {\n      try {\n        return JSON.parse(v);\n      } catch (e) {\n        return null;\n      }\n    }\n    return v;\n  };\n\n  this.List = function () {\n    const props = {};\n    if (!elm || typeof elm.getAttribute !== \"function\") {\n      return props;\n    }\n\n    const attrs = elm.attributes;\n    for (let i = 0; i < attrs.length; i++) {\n      const attr = attrs[i];\n      if (attr.name.startsWith(\"prop:\")) {\n        const k = attr.name.replace(\"prop:\", \"\");\n        const json = elm.getAttribute(\"json-attr-prop:\" + k) === \"true\";\n        if (json) {\n          try {\n            props[k] = JSON.parse(attr.value);\n          } catch (e) {\n            props[k] = null;\n          }\n          continue;\n        }\n        props[k] = attr.value;\n      }\n    }\n    return props;\n  };\n}\n\nfunction __sui_component(elm, component) {\n  this.root = elm;\n  this.store = new __sui_store(elm);\n  this.props = new __sui_props(elm);\n  this.state = component ? new __sui_state(component) : {};\n\n  const __self = this;\n\n  // @ts-ignore\n  this.$root = new __Query(this.root);\n\n  this.find = function (selector) {\n    // @ts-ignore\n    return new __Query(__self.root).find(selector);\n  };\n\n  this.query = function (selector) {\n    return __self.root.querySelector(selector);\n  };\n\n  this.queryAll = function (selector) {\n    return __self.root.querySelectorAll(selector);\n  };\n\n  this.emit = function (name, data) {\n    const event = new CustomEvent(name, { detail: data });\n    __self.root.dispatchEvent(event);\n  };\n\n  this.render = function (name, data, option) {\n    // @ts-ignore\n    const r = new __Render(__self, option);\n    return r.Exec(name, data);\n  };\n}\n\nfunction __sui_event_handler(event, dataKeys, jsonKeys, target, root, handler) {\n  const data = {};\n  target = target || null;\n  if (target) {\n    dataKeys.forEach(function (key) {\n      const value = target.getAttribute(\"data:\" + key);\n      data[key] = value;\n    });\n    jsonKeys.forEach(function (key) {\n      const value = target.getAttribute(\"json:\" + key);\n      data[key] = null;\n      if (value && value != \"\") {\n        try {\n          data[key] = JSON.parse(value);\n        } catch (e) {\n          const message = e.message || e || \"An error occurred\";\n          console.error(`[SUI] Event Handler Error: ${message} `, target);\n        }\n      }\n    });\n  }\n  handler &&\n    handler(event, data, {\n      rootElement: root,\n      targetElement: target,\n    });\n}\n\nfunction __sui_event_init(elm: Element) {\n  const bindEvent = (eventElm) => {\n    let cn = eventElm.getAttribute(\"s:event-cn\") || \"\";\n\n    // If has parent component, use the parent component name\n    if (cn == \"\") {//\u5982\u679C\u5B58\u5728\u591A\u4E2A\u5D4C\u5957\u7684\uFF0C\u4E0D\u80FD\u76F4\u63A5\u4F7F\u7528\u7236\u8282\u70B9\u7684\u4E8B\u4EF6\u5904\u7406\n      const parent = eventElm.closest(`[s\\\\:cn]`);\n      if (parent){\n        cn = parent.getAttribute(\"s:cn\") || \"\";\n      }\n    }\n\n    if (cn == \"\") {\n      console.error(\"[SUI] Component name is required for event binding\", elm);\n      return;\n    }\n\n    // Data keys\n    const events: Record<string, string> = {};\n    const dataKeys: string[] = [];\n    const jsonKeys: string[] = [];\n    for (let i = 0; i < eventElm.attributes.length; i++) {\n      if (eventElm.attributes[i].name.startsWith(\"data:\")) {\n        dataKeys.push(eventElm.attributes[i].name.replace(\"data:\", \"\"));\n      }\n      if (eventElm.attributes[i].name.startsWith(\"json:\")) {\n        jsonKeys.push(eventElm.attributes[i].name.replace(\"json:\", \"\"));\n      }\n      if (eventElm.attributes[i].name.startsWith(\"s:on-\")) {\n        const key = eventElm.attributes[i].name.replace(\"s:on-\", \"\");\n        events[key] = eventElm.attributes[i].value;\n      }\n    }\n\n    // Bind the event\n    for (const name in events) {\n      const bind = events[name];\n      if (cn == \"__page\") {\n        const handler = window[bind];\n        const root = document.body;\n        const target = eventElm;\n        eventElm.addEventListener(name, (event) => {\n          __sui_event_handler(event, dataKeys, jsonKeys, target, root, handler);\n        });\n        continue;\n      }\n\n      const component = eventElm.closest(`[s\\\\:cn=${cn}]`);\n      if (typeof window[cn] !== \"function\") {\n        console.error(`[SUI] Component ${cn} not found`, eventElm);\n        return;\n      }\n\n      // @ts-ignore\n      const comp = new window[cn](component);\n      const handler = comp[bind];\n      const root = comp.root;\n      const target = eventElm;\n      eventElm.addEventListener(name, (event) => {\n        __sui_event_handler(event, dataKeys, jsonKeys, target, root, handler);\n      });\n    }\n  };\n\n  const eventElms = elm.querySelectorAll(\"[s\\\\:event]\");\n  const jitEventElms = elm.querySelectorAll(\"[s\\\\:event-jit]\");\n  eventElms.forEach((eventElm) => bindEvent(eventElm));\n  jitEventElms.forEach((eventElm) => bindEvent(eventElm));\n}\n\nfunction __sui_store(elm) {\n  elm = elm || document.body;\n\n  this.Get = function (key) {\n    return elm.getAttribute(\"data:\" + key);\n  };\n\n  this.Set = function (key, value) {\n    elm.setAttribute(\"data:\" + key, value);\n  };\n\n  this.GetJSON = function (key) {\n    const value = elm.getAttribute(\"json:\" + key);\n    if (value && value != \"\") {\n      try {\n        const res = JSON.parse(value);\n        return res;\n      } catch (e) {\n        const message = e.message || e || \"An error occurred\";\n        console.error(`[SUI] Event Handler Error: ${message}`, elm);\n        return null;\n      }\n    }\n    return null;\n  };\n\n  this.SetJSON = function (key, value) {\n    elm.setAttribute(\"json:\" + key, JSON.stringify(value));\n  };\n\n  this.GetData = function () {\n    return this.GetJSON(\"__component_data\") || {};\n  };\n}\n\nasync function __sui_backend_call(\n  route: string,\n  headers: [string, string][] | Record<string, string> | Headers,\n  method: string,\n  ...args: any\n): Promise<any> {\n  const url = `/api/__yao/sui/v1/run${route}`;\n  headers = {\n    \"Content-Type\": \"application/json\",\n    Referer: window.location.href,\n    Cookie: document.cookie,\n    ...headers,\n  };\n  const payload = { method, args };\n  try {\n    const body = JSON.stringify(payload);\n    const response = await fetch(url, { method: \"POST\", headers, body: body });\n    const text = await response.text();\n    let data: any | null = null;\n    if (text && text != \"\") {\n      data = JSON.parse(text);\n    }\n\n    if (response.status >= 400) {\n      const message = data.message\n        ? data.message\n        : `Failed to call ${route} ${method}`;\n      const code = data.code ? data.code : 500;\n      return Promise.reject({ message, code });\n    }\n\n    return Promise.resolve(data);\n  } catch (e) {\n    const message = e.message ? e.message : `Failed to call ${route} ${method}`;\n    const code = e.code ? e.code : 500;\n    console.error(`[SUI] Failed to call ${route} ${method}:`, e);\n    return Promise.reject({ message, code });\n  }\n}\n\n/**\n * SUI Render\n * @param component\n * @param name\n */\nasync function __sui_render(\n  component: Component | string,\n  name: string,\n  data: Record<string, any>,\n  option?: RenderOption\n): Promise<string> {\n  const comp = (\n    typeof component === \"object\" ? component : $$(component)\n  ) as Component;\n\n  if (comp == null) {\n    console.error(`[SUI] Component not found: ${component}`);\n    return Promise.reject(\"Component not found\");\n  }\n\n  const elms = comp.root.querySelectorAll(`[s\\\\:render=${name}]`);\n  if (!elms.length) {\n    console.error(`[SUI] No element found with s:render=${name}`);\n    return Promise.reject(\"No element found\");\n  }\n\n  // Set default options\n  option = option || {};\n  option.replace = option.replace === undefined ? true : option.replace;\n  option.showLoader =\n    option.showLoader === undefined ? false : option.showLoader;\n  option.withPageData =\n    option.withPageData === undefined ? false : option.withPageData;\n\n  // Prepare loader\n  let loader = `<span class=\"sui-render-loading\">Loading...</span>`;\n  if (option.showLoader && option.replace) {\n    if (typeof option.showLoader === \"string\") {\n      loader = option.showLoader;\n    } else if (option.showLoader instanceof HTMLElement) {\n      loader = option.showLoader.outerHTML;\n    }\n    elms.forEach((elm) => (elm.innerHTML = loader));\n  }\n\n  // Prepare data\n  let _data = comp.store.GetData() || {};\n  if (option.withPageData) {\n    // @ts-ignore\n    _data = { ..._data, ...__sui_data };\n  }\n\n  // get s:route attribute\n  const elm = comp.root.closest(\"[s\\\\:route]\");\n  const routeAttr = elm ? elm.getAttribute(\"s:route\") : false;\n  const root = document.body.getAttribute(\"s:public\") || \"\";\n  const route = routeAttr\n    ? `${root}${routeAttr}`\n    : option.route || window.location.pathname;\n  option.component = (routeAttr && comp.root.getAttribute(\"s:cn\")) || \"\";\n\n  const url = `/api/__yao/sui/v1/render${route}`;\n  const payload = { name, data: _data, option };\n\n  // merge the user data\n  if (data) {\n    for (const key in data) {\n      payload.data[key] = data[key];\n    }\n  }\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Cookie: document.cookie,\n  };\n\n  // Native post request to the server\n  try {\n    const body = JSON.stringify(payload);\n    const response = await fetch(url, { method: \"POST\", headers, body: body });\n    const text = await response.text();\n    if (!option.replace) {\n      return Promise.resolve(text);\n    }\n\n    // Set the response text to the elements\n    elms.forEach((elm) => {\n      elm.innerHTML = text;\n\n      // Find sub components and initialize them\n      const subElms = elm.querySelectorAll(\"[s\\\\:cn]\");\n      subElms.forEach((subElm) => {\n        const method = subElm.getAttribute(\"s:ready\");\n        const cn = subElm.getAttribute(\"s:cn\");\n        if (method && cn && typeof window[cn] === \"function\") {\n          try {\n            new window[cn](subElm);\n          } catch (e) {\n            const message = e.message || e || \"An error occurred\";\n            console.error(`[SUI] ${cn} Error: ${message}`);\n          }\n        }\n      });\n\n      try {\n        __sui_event_init(elm);\n      } catch (e) {\n        const message = e.message || \"Failed to init events\";\n        Promise.reject(message);\n      }\n    });\n\n    return Promise.resolve(text);\n  } catch (e) {\n    //Set the error message\n    elms.forEach((elm) => {\n      elm.innerHTML = `<span class=\"sui-render-error\">Failed to render</span>`;\n      console.error(\"Failed to render\", e);\n    });\n    return Promise.reject(\"Failed to render\");\n  }\n}\n\nexport type Component = {\n  root: HTMLElement;\n  state: ComponentState;\n  store: ComponentStore;\n  watch?: Record<string, (value: any, state?: State) => void>;\n  Constants?: Record<string, any>;\n\n  [key: string]: any;\n};\n\nexport type RenderOption = {\n  target?: HTMLElement; // default is same with s:render target\n  showLoader?: HTMLElement | string | boolean; // default is false\n  replace?: boolean; // default is true\n  withPageData?: boolean; // default is false\n  component?: string; // default is empty\n  route?: string; // default is empty\n};\n\nexport type ComponentState = {\n  Set: (key: string, value: any) => void;\n};\n\nexport type ComponentStore = {\n  Get: (key: string) => string;\n  Set: (key: string, value: any) => void;\n  GetJSON: (key: string) => any;\n  SetJSON: (key: string, value: any) => void;\n  GetData: () => Record<string, any>;\n};\n\nexport type State = {\n  target: HTMLElement;\n  stopPropagation();\n};\n\nfunction $Store(elm) {\n  if (!elm) {\n    return null;\n  }\n\n  if (typeof elm === \"string\") {\n    elm = document.querySelectorAll(elm);\n    if (elm.length == 0) {\n      return null;\n    }\n    elm = elm[0];\n  }\n  // @ts-ignore\n  return new __sui_store(elm);\n}\n\nfunction $Query(selector: string | Element): __Query {\n  return new __Query(selector);\n}\n\nclass __Query {\n  selector: string | Element | NodeListOf<Element> | undefined = \"\";\n  elements: NodeListOf<Element> | null = null;\n  element: Element | null = null;\n  constructor(selector: string | Element | NodeListOf<Element>) {\n    if (typeof selector === \"string\") {\n      this.selector = selector;\n      this.elements = document.querySelectorAll(selector);\n      if (this.elements.length > 0) {\n        this.element = this.elements[0];\n      }\n    } else if (selector instanceof NodeList) {\n      this.elements = selector;\n      if (this.elements.length > 0) {\n        this.element = this.elements[0];\n      }\n    } else {\n      this.element = selector;\n    }\n\n    this.selector = selector;\n  }\n\n  elm(): Element | null {\n    return this.element;\n  }\n\n  elms(): NodeListOf<Element> | null {\n    return this.elements;\n  }\n\n  find(selector: string): __Query | null {\n    const elm = this.element?.querySelector(selector);\n    if (elm) {\n      return new __Query(elm);\n    }\n    return null;\n  }\n\n  findAll(selector: string): __Query | null {\n    const elms = this.element?.querySelectorAll(selector);\n    if (elms) {\n      return new __Query(elms);\n    }\n    return null;\n  }\n\n  closest(selector: string): __Query | null {\n    const elm = this.element?.closest(selector);\n    if (elm) {\n      return new __Query(elm);\n    }\n    return null;\n  }\n\n  on(event: string, callback: (event: Event) => void): __Query {\n    if (!this.element) {\n      return this;\n    }\n    this.element.addEventListener(event, callback);\n    return this;\n  }\n\n  $$() {\n    if (!this.element) {\n      return null;\n    }\n    const root = this.element.closest(\"[s\\\\:cn]\");\n    if (!root) {\n      return null;\n    }\n\n    // @ts-ignore\n    return $$(root);\n  }\n\n  each(callback: (element: __Query, index: number) => void) {\n    if (!this.elements) {\n      return;\n    }\n    this.elements.forEach((element, index) => {\n      callback(new __Query(element), index);\n    });\n    return;\n  }\n\n  store() {\n    if (!this.element || typeof this.element.getAttribute !== \"function\") {\n      return null;\n    }\n\n    // @ts-ignore\n    return new __sui_store(this.element);\n  }\n\n  attr(key) {\n    if (!this.element || typeof this.element.getAttribute !== \"function\") {\n      return null;\n    }\n    return this.element.getAttribute(key);\n  }\n\n  data(key) {\n    if (!this.element || typeof this.element.getAttribute !== \"function\") {\n      return null;\n    }\n    return this.element.getAttribute(\"data:\" + key);\n  }\n\n  json(key) {\n    if (!this.element || typeof this.element.getAttribute !== \"function\") {\n      return null;\n    }\n    const v = this.element.getAttribute(\"json:\" + key);\n    if (!v) {\n      return null;\n    }\n    try {\n      return JSON.parse(v);\n    } catch (e) {\n      console.error(`Error parsing JSON for key ${key}: ${e}`);\n      return null;\n    }\n  }\n\n  prop(key) {\n    if (!this.element || typeof this.element.getAttribute !== \"function\") {\n      return null;\n    }\n    const k = \"prop:\" + key;\n    const v = this.element.getAttribute(k);\n    const json = this.element.getAttribute(\"json-attr-prop:\" + key) === \"true\";\n    if (json && v) {\n      try {\n        return JSON.parse(v);\n      } catch (e) {\n        console.error(`Error parsing JSON for prop ${key}: ${e}`);\n        return null;\n      }\n    }\n    return v;\n  }\n\n  hasClass(className) {\n    return this.element?.classList.contains(className);\n  }\n\n  toggleClass(className) {\n    const classes = Array.isArray(className)\n      ? className\n      : className?.split(\" \");\n    classes?.forEach((c) => {\n      const v = c.replace(/[\\n\\r\\s]/g, \"\");\n      if (v === \"\") return;\n      this.element?.classList.toggle(v);\n    });\n    return this;\n  }\n\n  removeClass(className) {\n    const classes = Array.isArray(className)\n      ? className\n      : className?.split(\" \");\n    classes?.forEach((c) => {\n      const v = c.replace(/[\\n\\r\\s]/g, \"\");\n      if (v === \"\") return;\n      this.element?.classList.remove(v);\n    });\n    return this;\n  }\n\n  addClass(className) {\n    const classes = Array.isArray(className)\n      ? className\n      : className?.split(\" \");\n    classes?.forEach((c) => {\n      const v = c.replace(/[\\n\\r\\s]/g, \"\");\n      if (v === \"\") return;\n      this.element?.classList.add(v);\n    });\n    return this;\n  }\n\n  html(html?: string): __Query | string {\n    if (html === undefined) {\n      return this.element?.innerHTML || \"\";\n    }\n    if (this.element) {\n      this.element.innerHTML = html;\n    }\n    return this;\n  }\n}\n\nfunction $Render(comp, option): __Render {\n  const r = new __Render(comp, option);\n  return r;\n}\n\nclass __Render {\n  comp = null;\n  option = null;\n  constructor(comp, option) {\n    this.comp = comp;\n    this.option = option;\n  }\n  async Exec(name, data): Promise<string> {\n    // @ts-ignore\n    return __sui_render(this.comp, name, data, this.option);\n  }\n}\n\nfunction $Backend(\n  route?: string,\n  headers?: [string, string][] | Record<string, string> | Headers\n) {\n  const root = document.body.getAttribute(\"s:public\") || \"/\";\n  route = route || window.location.pathname;\n  const re = new RegExp(\"^\" + root);\n  route = root + route.replace(re, \"\");\n  return new __Backend(route, headers);\n}\n\nclass __Backend {\n  route = \"\";\n  headers: [string, string][] | Record<string, string> | Headers = {};\n  constructor(\n    route: string,\n    headers: [string, string][] | Record<string, string> | Headers = {}\n  ) {\n    this.route = route;\n    this.headers = headers;\n  }\n\n  async Call(method: string, ...args: any): Promise<any> {\n    // @ts-ignore\n    return await __sui_backend_call(this.route, this.headers, method, ...args);\n  }\n}\n\n/**\n * YAO Pure JavaScript SDK\n * @author Max<max@iqka.com>\n * @maintainer https://yaoapps.com\n */\n\n/**\n * Yao Object\n * @param {*} host\n */\nfunction Yao(host) {\n  this.host = `${\n    host || window.location.protocol + \"//\" + window.location.host\n  }/api`;\n  this.query = {};\n  new URLSearchParams(window.location.search).forEach((key, value) => {\n    this.query[key] = value;\n  });\n}\n\n/**\n * Get API\n * @param {*} path\n * @param {*} params\n */\nYao.prototype.Get = async function (path, params, headers) {\n  return this.Fetch(\"GET\", path, params, null, headers);\n};\n\n/**\n * Post API\n * @param {*} path\n * @param {*} data\n * @param {*} params\n * @param {*} headers\n */\nYao.prototype.Post = async function (path, data, params, headers) {\n  return this.Fetch(\"POST\", path, params, data, headers);\n};\n\n/**\n * Download API\n * @param {*} path\n * @param {*} params\n */\nYao.prototype.Download = async function (path, params, savefile, headers) {\n  try {\n    const blob = await this.Fetch(\"GET\", path, params, null, headers, true);\n\n    var objectUrl = window.URL.createObjectURL(blob);\n    let anchor = document.createElement(\"a\");\n    document.body.appendChild(anchor);\n    anchor.href = objectUrl;\n    anchor.download = savefile;\n    anchor.click();\n    window.URL.revokeObjectURL(objectUrl);\n  } catch (err) {\n    alert(\"\u6210\u529F\u521B\u5EFA\u5BFC\u51FA\u4EFB\u52A1!\");\n  }\n};\n\n/**\n * Fetch API\n * @param {*} method\n * @param {*} path\n * @param {*} params\n * @param {*} data\n * @param {*} headers\n */\nYao.prototype.Fetch = async function (\n  method,\n  path,\n  params,\n  data,\n  headers,\n  isblob\n) {\n  params = params || {};\n  headers = headers || {};\n  data = data || null;\n  var url = `${this.host}${path}`;\n  var queryString = this.Serialize(params);\n  if (queryString != \"\") {\n    url = url.includes(\"?\") ? `${url}&${queryString}` : `${url}?${queryString}`;\n  }\n\n  const token = this.Token();\n  if (token != \"\") {\n    headers[\"authorization\"] = `Bearer ${token}`;\n  }\n\n  if (!headers[\"Content-Type\"]) {\n    headers[\"Content-Type\"] = \"application/json\";\n  }\n\n  var options: any = {\n    method: method,\n    mode: \"cors\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\", // include, *same-origin, omit\n    headers: headers,\n    redirect: \"follow\", // manual, *follow, error\n  };\n\n  if (data != null) {\n    options[\"body\"] = JSON.stringify(data);\n  }\n\n  const resp = await fetch(url, options);\n  const type = resp.headers.get(\"Content-Type\") || \"\";\n  if (type.includes(\"application/json\")) {\n    try {\n      const data = await resp.json();\n      return data;\n    } catch (err) {\n      return { code: resp.status, message: \"empty return\" };\n    }\n  } else if (isblob) {\n    return resp.blob();\n  } else if (type.includes(\"text/html\") || type.includes(\"text/plain\")) {\n    return resp.text();\n  }\n  return resp.text();\n};\n\n/**\n * Token API\n * @param {*} path\n * @param {*} params\n */\nYao.prototype.Token = function () {\n  var token = sessionStorage.getItem(\"token\") || \"\";\n  if (token == \"\") {\n    return this.Cookie(\"__tk\") || \"\";\n  }\n  return token;\n};\n\n/**\n * Get Cookie\n * @param {*} cookieName\n * @returns\n */\nYao.prototype.Cookie = function (cookieName) {\n  var name = cookieName + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var cookieArray = decodedCookie.split(\";\");\n\n  for (var i = 0; i < cookieArray.length; i++) {\n    var cookie = cookieArray[i].trim();\n    if (cookie.indexOf(name) === 0) {\n      return cookie.substring(name.length, cookie.length);\n    }\n  }\n  return null;\n};\n\nYao.prototype.SetCookie = function (cookieName, cookieValue, expireDays) {\n  expireDays = expireDays || 30;\n  var d = new Date();\n  d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\n  var expires = \"expires=\" + d.toUTCString();\n  document.cookie = `${cookieName}=${cookieValue};${expires};path=/`;\n};\n\nYao.prototype.DeleteCookie = function (cookieName) {\n  document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n};\n\n/**\n * Serialize To Query String\n * @param {*} obj\n * @returns\n */\nYao.prototype.Serialize = function (obj) {\n  const str: string[] = [];\n  for (const p in obj)\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n    }\n  return str.join(\"&\");\n};\n\n/**\n * Yao AI Agent Pure JavaScript SDK\n * @author Max<max@iqka.com>\n * @maintainer https://yaoapps.com\n */\n\n/**\n * Message structure for agent responses\n */\ninterface AgentMessage {\n  text: string;\n  type?: string;\n  done?: boolean;\n  is_neo?: boolean;\n  assistant_id?: string;\n  assistant_name?: string;\n  assistant_avatar?: string;\n  props?: Record<string, any>;\n  tool_id?: string;\n  new?: boolean;\n  delta?: boolean;\n  result?: any;\n  previous_assistant_id?: string;\n}\n\n/**\n * Done event data structure\n */\ntype AgentDoneData = AgentMessage[];\n\n/**\n * Event handler function types\n */\ninterface MessageHandler {\n  (message: AgentMessage): void;\n}\n\ninterface DoneHandler {\n  (messages: AgentDoneData): void;\n}\n\n/**\n * Event types that can be listened to\n */\ntype AgentEvent = \"message\" | \"done\";\n\n/**\n * Event handlers record type\n */\ninterface EventHandlers {\n  message?: MessageHandler;\n  done?: DoneHandler;\n}\n\nclass Agent {\n  private host: string;\n  private token: string;\n  private events: EventHandlers;\n  private assistant_id: string;\n  private chat_id?: string;\n  private es: EventSource | null;\n  private context: Record<string, any>;\n  private silent?: boolean = false;\n  private history_visible?: boolean = false;\n\n  /**\n   * Agent constructor\n   * @param option Agent initialization options\n   */\n  constructor(assistant_id: string, option: AgentOption) {\n    this.host = option.host || \"/api/__yao/neo\";\n    this.token = option.token;\n    this.events = {};\n    this.assistant_id = assistant_id;\n    this.chat_id = option.chat_id;\n    this.es = null;\n    this.context = option.context || {};\n\n    // Set silent mode, default is true\n    if (option.silent !== undefined) {\n      this.silent =\n        option.silent === true ||\n        option.silent === \"true\" ||\n        option.silent === 1 ||\n        option.silent === \"1\"\n          ? false\n          : true;\n    }\n\n    // Set history visible mode, default is false\n    if (option.history_visible !== undefined) {\n      this.history_visible =\n        option.history_visible === true ||\n        option.history_visible === \"true\" ||\n        option.history_visible === 1 ||\n        option.history_visible === \"1\"\n          ? true\n          : false;\n    }\n  }\n\n  /**\n   * Generate a chat ID\n   * @returns A unique chat ID in the format of chat_[timestamp]_[random]\n   */\n  private makeChatID(): string {\n    const random = Math.random().toString(36).substring(2, 15);\n    const ts = Date.now();\n    return `chat_${ts}_${random}`;\n  }\n\n  /**\n   * Register an event handler\n   * @param event Event type to listen for (\"message\" or \"done\")\n   * @param handler Function to handle the event\n   * @returns The Agent instance for chaining\n   */\n  On<E extends AgentEvent>(\n    event: E,\n    handler: E extends \"message\" ? MessageHandler : DoneHandler\n  ): Agent {\n    if (event === \"message\") {\n      this.events.message = handler as MessageHandler;\n    } else if (event === \"done\") {\n      this.events.done = handler as DoneHandler;\n    }\n    return this;\n  }\n\n  /**\n   * Cancel the agent\n   */\n  Cancel() {\n    if (this.es) {\n      this.es.close();\n      this.es = null;\n    }\n  }\n\n  /**\n   * Call the AI Agent\n   * @param input Text message or input object with text and optional attachments\n   * @param args Additional arguments to pass to the agent\n   */\n  async Call(input: AgentInput, ...args: any[]): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const messages: AgentMessage[] = [];\n      let lastAssistant = {\n        assistant_id: null as string | null,\n        assistant_name: null as string | null,\n        assistant_avatar: null as string | null,\n      };\n\n      // Process input content\n      let content: AgentInputContent;\n      if (typeof input === \"string\") {\n        content = { text: input };\n      } else {\n        content = { text: input.text };\n        if (input.attachments && input.attachments.length > 0) {\n          content.attachments = input.attachments.map((attachment) => ({\n            name: attachment.name,\n            url: attachment.url,\n            type: attachment.type,\n            content_type: attachment.content_type,\n            bytes: attachment.bytes,\n            created_at: attachment.created_at,\n            file_id: attachment.file_id,\n            chat_id: attachment.chat_id,\n            assistant_id: attachment.assistant_id,\n            description: attachment.description,\n          }));\n        }\n      }\n\n      // Add context to the content\n      const context = { ...this.context, args };\n      const contentRaw = encodeURIComponent(JSON.stringify(content));\n      const contextRaw = encodeURIComponent(JSON.stringify(context));\n      const token = this.token;\n      const silent = this.silent ? \"true\" : \"false\";\n      const history_visible = this.history_visible ? \"true\" : \"false\";\n      const chatId = this.chat_id || this.makeChatID();\n      const assistantParam = `&assistant_id=${this.assistant_id}`;\n      const status_endpoint = `${this.host}/status?content=${contentRaw}&context=${contextRaw}&token=${token}&chat_id=${chatId}${assistantParam}`;\n      const endpoint = `${this.host}?client_type=jssdk&content=${contentRaw}&context=${contextRaw}&token=${token}&silent=${silent}&history_visible=${history_visible}&chat_id=${chatId}${assistantParam}`;\n\n      const handleError = async (error: any) => {\n        try {\n          const response = await fetch(status_endpoint, {\n            credentials: \"include\",\n            headers: { Accept: \"application/json\" },\n          });\n\n          if (response.status === 200 || response.status === 201) return;\n\n          const data = await response.json().catch(() => ({\n            message: `HTTP ${response.status}`,\n          }));\n\n          let errorMessage = \"Network error, please try again later\";\n          if (data?.message) {\n            errorMessage = data.message;\n          } else if (error.message?.includes(\"401\")) {\n            errorMessage = \"Session expired: Please login again\";\n          } else if (error.message?.includes(\"403\")) {\n            errorMessage =\n              \"Access denied: Please check your permissions or login again\";\n          } else if (error.message?.includes(\"500\")) {\n            errorMessage =\n              \"Server error: The service is temporarily unavailable\";\n          } else if (error.message?.includes(\"404\")) {\n            errorMessage =\n              \"AI service not found: Please check your configuration\";\n          } else if (error.name === \"TypeError\") {\n            errorMessage =\n              \"Connection failed: Please check your network connection\";\n          }\n\n          const messageHandler = this.events[\"message\"] as MessageHandler;\n          if (messageHandler) {\n            messageHandler({\n              text: errorMessage,\n              type: \"error\",\n              is_neo: true,\n              done: true,\n            });\n          }\n\n          return reject(new Error(errorMessage));\n        } catch (statusError) {\n          const messageHandler = this.events[\"message\"] as MessageHandler;\n          if (messageHandler) {\n            messageHandler({\n              text: \"Service unavailable, please try again later\",\n              type: \"error\",\n              is_neo: true,\n              done: true,\n            });\n          }\n\n          return reject(\n            new Error(\"Service unavailable, please try again later\")\n          );\n        }\n      };\n\n      try {\n        let last_type: string | null = null;\n        const es = new EventSource(endpoint, { withCredentials: true });\n        this.es = es;\n\n        es.onopen = () => {};\n        es.onmessage = ({ data }: { data: string }) => {\n          try {\n            const formated_data = JSON.parse(data);\n            if (!formated_data) return;\n\n            const messageHandler = this.events[\"message\"] as MessageHandler;\n            if (!messageHandler) return;\n\n            const {\n              tool_id,\n              begin,\n              type,\n              end,\n              text,\n              props,\n              done,\n              assistant_id,\n              assistant_name,\n              assistant_avatar,\n              new: is_new,\n              delta,\n              result,\n            } = formated_data;\n\n            // Handle action message type\n            if (type === \"action\") {\n              const { namespace, primary, data_item, action, extra } =\n                props || {};\n              if (action && Array.isArray(action)) {\n                const actionMessage = {\n                  text: text || \"\",\n                  type: \"action\",\n                  props: {\n                    namespace: namespace || \"chat\",\n                    primary: primary || \"id\",\n                    data_item: data_item || {},\n                    action,\n                    extra,\n                  },\n                  is_neo: true,\n                  done: !!done,\n                };\n\n                messages.push(actionMessage);\n                messageHandler(actionMessage);\n\n                if (done) {\n                  const doneHandler = this.events[\"done\"] as DoneHandler;\n                  doneHandler?.(messages);\n                  es.close();\n                }\n                return resolve(result);\n              }\n            }\n\n            // Check if we need to create a new message\n            const shouldCreateNewMessage =\n              (type !== last_type &&\n                (!done || (done === true && (text || props)))) || // if type changed or done is true and there is text or props\n              messages.length === 0 ||\n              (assistant_id &&\n                messages[messages.length - 1].assistant_id !== assistant_id) ||\n              (is_new && !delta); // Only create new message if it's new and not a delta update\n\n            // Update last type\n            last_type = type;\n\n            // Update assistant information\n            if (assistant_id) lastAssistant.assistant_id = assistant_id;\n            if (assistant_name) lastAssistant.assistant_name = assistant_name;\n            if (assistant_avatar)\n              lastAssistant.assistant_avatar = assistant_avatar;\n\n            if (shouldCreateNewMessage) {\n              // Mark the last message as done if it exists\n              if (messages.length > 0 && messages[messages.length - 1].is_neo) {\n                messages[messages.length - 1] = {\n                  ...messages[messages.length - 1],\n                  done: true,\n                };\n              }\n\n              // Create new message with all original properties\n              const newMessage = {\n                text: text || \"\",\n                type: type || \"text\",\n                props,\n                is_neo: true,\n                new: is_new, // Only set new if it's from the original message\n                tool_id,\n                result: result,\n                assistant_id: lastAssistant.assistant_id || undefined,\n                assistant_name: lastAssistant.assistant_name || undefined,\n                assistant_avatar: lastAssistant.assistant_avatar || undefined,\n              };\n\n              messages.push(newMessage);\n              messageHandler(newMessage);\n\n              // If the message is done, close the event source\n              if (done) {\n                const doneHandler = this.events[\"done\"] as DoneHandler;\n                doneHandler?.(messages);\n                es.close();\n                return resolve(result);\n              }\n              return;\n            }\n\n            // Get current message (we know it exists because we checked messages.length above)\n            const current_answer = messages[messages.length - 1];\n\n            // Set previous assistant id\n            if (messages.length > 1) {\n              const previous_message = messages[messages.length - 2];\n              if (previous_message.assistant_id) {\n                current_answer.previous_assistant_id =\n                  previous_message.assistant_id;\n              }\n            }\n\n            // Handle message completion (done flag is set)\n            if (done) {\n              if (text) {\n                current_answer.text = text;\n              }\n              if (type) {\n                current_answer.type = type;\n              }\n              if (props) {\n                current_answer.props = props;\n              }\n\n              // Set result if available\n              if (result) {\n                current_answer.result = result;\n              }\n\n              // Mark all previous neo messages as done\n              for (let i = messages.length - 1; i >= 0; i--) {\n                const message = messages[i];\n                if (message.is_neo) {\n                  if (message.done) break;\n                  messages[i] = { ...message, done: true };\n                }\n              }\n\n              const doneHandler = this.events[\"done\"] as DoneHandler;\n              doneHandler?.(messages);\n              es.close();\n              return resolve(result);\n            }\n\n            // Skip processing if no content to update\n            if (!text && !props && !type) return;\n\n            // Update props if available\n            if (props) {\n              if (type === \"think\" || type === \"tool\") {\n                current_answer.props = {\n                  ...(current_answer.props || {}),\n                  id: tool_id,\n                  begin,\n                  end,\n                };\n              } else {\n                current_answer.props = props;\n              }\n            }\n\n            // Handle text content\n            if (text) {\n              if (delta) {\n                current_answer.text = (current_answer.text || \"\") + text;\n                if (text.startsWith(\"\\r\")) {\n                  current_answer.text = text.replace(\"\\r\", \"\");\n                }\n              } else {\n                current_answer.text = text;\n              }\n            }\n\n            // Send current message to handler\n            messageHandler(current_answer);\n          } catch (err) {\n            const errorMessage =\n              err.message || JSON.stringify(err) || \"\u672A\u77E5\u9519\u8BEF\";\n            console.error(\"Failed to parse message:\", err);\n            reject(new Error(errorMessage));\n          }\n        };\n\n        es.onerror = (ev) => {\n          handleError(ev);\n          es.close();\n        };\n      } catch (error) {\n        handleError(error);\n      }\n    });\n  }\n}\n\n/**\n * Attachment information for file uploads\n */\ninterface AgentAttachment {\n  name: string;\n  url: string;\n  type: string;\n  content_type: string;\n  bytes: number;\n  created_at: string;\n  file_id: string;\n  chat_id?: string;\n  assistant_id?: string;\n  description?: string;\n}\n\n/**\n * Input content structure for agent calls\n */\ninterface AgentInputContent {\n  text: string;\n  attachments?: AgentAttachment[];\n}\n\n/**\n * Input type for agent calls, can be either a string or a structured input\n */\ntype AgentInput =\n  | string\n  | {\n      text: string;\n      attachments?: AgentAttachment[];\n    };\n\n/**\n * Agent initialization options\n */\ninterface AgentOption {\n  host?: string;\n  token: string;\n  silent?: boolean | string | number;\n  history_visible?: boolean | string | number;\n  chat_id?: string;\n  context?: Record<string, any>;\n}\n"],
  "mappings": "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",
  "names": ["selector", "elm", "cn", "component", "name", "key", "value", "target", "__async", "_a", "handler", "parent", "event", "k", "v", "e", "props", "attrs", "i", "attr", "__self", "data", "option", "dataKeys", "jsonKeys", "root", "message", "bindEvent", "eventElm", "events", "bind", "comp", "eventElms", "jitEventElms", "route", "headers", "method", "args", "url", "__spreadValues", "payload", "body", "response", "text", "code", "elms", "loader", "_data", "routeAttr", "subElm", "__publicField", "callback", "element", "index", "className", "classes", "c", "html", "re", "host", "path", "params", "savefile", "blob", "objectUrl", "anchor", "err", "isblob", "queryString", "token", "options", "resp", "type", "cookieName", "decodedCookie", "cookieArray", "cookie", "cookieValue", "expireDays", "d", "expires", "obj", "str", "p", "assistant_id", "random", "input", "resolve", "reject", "messages", "lastAssistant", "content", "attachment", "context", "__spreadProps", "contentRaw", "contextRaw", "silent", "history_visible", "chatId", "assistantParam", "status_endpoint", "endpoint", "handleError", "error", "_b", "_c", "_d", "errorMessage", "messageHandler", "statusError", "last_type", "es", "formated_data", "tool_id", "begin", "end", "done", "assistant_name", "assistant_avatar", "is_new", "delta", "result", "namespace", "primary", "data_item", "action", "extra", "actionMessage", "doneHandler", "shouldCreateNewMessage", "newMessage", "current_answer", "previous_message", "ev"]
}
